<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserAuthRecordMapper">
    
    <resultMap type="UserAuthRecord" id="UserAuthRecordResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="userAccount"    column="user_account"    />
        <result property="nickName"    column="nick_name"    />
        <result property="accountType"    column="account_type"    />
        <result property="sellerFlag"    column="seller_flag"    />
        <result property="agentId"    column="agent_id"    />
        <result property="agentName"    column="agent_name"    />
        <result property="idNumber"    column="id_number"    />
        <result property="realName"    column="real_name"    />
        <result property="img1Key"    column="img1_key"    />
        <result property="img2Key"    column="img2_key"    />
        <result property="img3Key"    column="img3_key"    />
        <result property="authMsg"    column="auth_msg"    />
        <result property="authStatus"    column="auth_status"    />
        <result property="authMethod"    column="auth_method"    />
        <result property="authLevel"    column="auth_level"    />
        <result property="createTime"    column="create_time"    />
        <result property="approveTime"    column="approve_time"    />
        <result property="approveName"    column="approve_name"    />
    </resultMap>

    <sql id="selectUserAuthRecordVo">
        select a.id, user_id,user_account,nick_name,account_type,seller_flag,agent_id,agent_name,id_number, a.real_name, a.img1_key, a.img2_key, a.img3_key, a.auth_msg, a.auth_status, a.auth_method, a.auth_level, create_time, approve_time, approve_name
        from user_auth_record a
                 left join user_info b
                           on a.user_id = b.id
    </sql>

    <select id="selectUserAuthRecordList" parameterType="UserAuthRecord" resultMap="UserAuthRecordResult">
        <include refid="selectUserAuthRecordVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userAccount != null "> and user_account like concat('%',#{userAccount},'%') </if>
            <if test="nickName != null "> and nick_name like concat('%',#{nickName},'%') </if>
            <if test="accountType != null "> and account_type = #{accountType}</if>
            <if test="sellerFlag != null "> and seller_flag = #{sellerFlag}</if>
            <if test="idNumber != null  and idNumber != ''"> and id_number = #{idNumber}</if>
            <if test="realName != null  and realName != ''"> and a.real_name like concat('%', #{realName}, '%')</if>
            <if test="authStatus != null "> and a.auth_status = #{authStatus}</if>
            <if test="authMethod != null "> and a.auth_method = #{authMethod}</if>
            <if test="authLevel != null "> and a.auth_level = #{authLevel}</if>
            <if test="approveTime != null "><![CDATA[ and DATE_FORMAT(approve_time, '%Y-%m-%d') = DATE_FORMAT(#{approveTime}, '%Y-%m-%d')]]></if>
            <if test="approveName != null  and approveName != ''"> and approve_name like concat('%', #{approveName}, '%')</if>
            <if test="agentId != null and params.isAllAgentData != null and params.isAllAgentData == 0">
                and agent_id in (select user_id from agent_team_level_line where sup_user_id = #{agentId} union select #{agentId})
            </if>
            <if test="agentId != null and params.isAllAgentData == null">
                and agent_id = #{agentId}
            </if>
            <if test="params.ids != null and params.ids.size > 0">
                and a.id in
                <foreach collection="params.ids" index="index" item="item" open="(" close=")" separator="," nullable="true">
                    #{item}
                </foreach>
            </if>
            <if test="params.ids != null and params.ids.size == 0">
                and a.id = 0
            </if>
            ${params.dataScope}
        </where>
    </select>
    
    <select id="selectUserAuthRecordById" parameterType="Long" resultMap="UserAuthRecordResult">
        <include refid="selectUserAuthRecordVo"/>
        where a.id = #{id}
    </select>

    <select id="selectLastOne" resultMap="UserAuthRecordResult">
        <include refid="selectUserAuthRecordVo"/>
        where user_id = #{userId} and a.auth_level = #{authLevel}
        order by id desc limit 1
    </select>


    <insert id="insertUserAuthRecord" parameterType="UserAuthRecord" useGeneratedKeys="true" keyProperty="id">
        insert into user_auth_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="idNumber != null">id_number,</if>
            <if test="realName != null">real_name,</if>
            <if test="img1Key != null">img1_key,</if>
            <if test="img2Key != null">img2_key,</if>
            <if test="img3Key != null">img3_key,</if>
            <if test="authMsg != null">auth_msg,</if>
            <if test="authStatus != null">auth_status,</if>
            <if test="authMethod != null">auth_method,</if>
            <if test="authLevel != null">auth_level,</if>
            <if test="createTime != null">create_time,</if>
            <if test="approveTime != null">approve_time,</if>
            <if test="approveName != null">approve_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="idNumber != null">#{idNumber},</if>
            <if test="realName != null">#{realName},</if>
            <if test="img1Key != null">#{img1Key},</if>
            <if test="img2Key != null">#{img2Key},</if>
            <if test="img3Key != null">#{img3Key},</if>
            <if test="authMsg != null">#{authMsg},</if>
            <if test="authStatus != null">#{authStatus},</if>
            <if test="authMethod != null">#{authMethod},</if>
            <if test="authLevel != null">#{authLevel},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="approveTime != null">#{approveTime},</if>
            <if test="approveName != null">#{approveName},</if>
         </trim>
    </insert>

    <update id="updateUserAuthRecord" parameterType="UserAuthRecord">
        update user_auth_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="idNumber != null">id_number = #{idNumber},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="img1Key != null">img1_key = #{img1Key},</if>
            <if test="img2Key != null">img2_key = #{img2Key},</if>
            <if test="img3Key != null">img3_key = #{img3Key},</if>
            <if test="authMsg != null">auth_msg = #{authMsg},</if>
            <if test="authStatus != null">auth_status = #{authStatus},</if>
            <if test="authMethod != null">auth_method = #{authMethod},</if>
            <if test="authLevel != null">auth_level = #{authLevel},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="approveTime != null">approve_time = #{approveTime},</if>
            <if test="approveName != null">approve_name = #{approveName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserAuthRecordById" parameterType="Long">
        delete from user_auth_record where id = #{id}
    </delete>

    <delete id="deleteUserAuthRecordByIds" parameterType="String">
        delete from user_auth_record where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>