<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserShoppingOrderDetailMapper">
    
    <resultMap type="UserShoppingOrderDetail" id="UserShoppingOrderDetailResult">
        <result property="id"    column="id"    />
        <result property="userShoppingOrderId"    column="user_shopping_order_id"    />
        <result property="userId"    column="user_id"    />
        <result property="sellingGoodsInfoId"    column="selling_goods_info_id"    />
        <result property="sellerId"    column="seller_id"    />
        <result property="skuId"    column="sku_id"    />
        <result property="skuImgs"    column="sku_imgs"    />
        <result property="buyNum"    column="buy_num"    />
        <result property="goodsSinglePrice"    column="goods_single_price"    />
        <result property="goodsSystemSinglePrice"    column="goods_system_single_price"    />
        <result property="orderPrice"    column="order_price"    />
        <result property="freightAmount"    column="freight_amount"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="goodsImg"    column="goods_img"    />
        <result property="goodsDesc"    column="goods_desc"    />
        <result property="shopInfoId"    column="shop_info_id"    />
        <result property="shopName"    column="shop_name"    />
        <association property="goodsNameLang" javaType="langMgr">
            <result property="zh"    column="category_name"    />
            <result property="en"    column="category_name_en"    />
            <result property="tc"    column="category_name_tc"    />
            <result property="de"    column="category_name_de"    />
            <result property="es"    column="category_name_es"    />
            <result property="fr"    column="category_name_fr"    />
            <result property="idn"    column="category_name_idn"    />
            <result property="jp"    column="category_name_jp"    />
            <result property="ko"    column="category_name_ko"    />
            <result property="my"    column="category_name_my"    />
            <result property="th"    column="category_name_th"    />
            <result property="vi"    column="category_name_vi"    />
            <result property="pt"    column="category_name_pt"    />
            <result property="rus"    column="category_name_rus"    />
            <result property="blr"    column="category_name_blr"    />
            <result property="ida"    column="category_name_ida"    />
            <result property="sa"    column="category_name_sa"    />
            <result property="ar"    column="category_name_ar"    />
            <result property="it"    column="category_name_it"    />
            <result property="tr"    column="category_name_tr"    />
        </association>
        <association property="goodsDescLang" javaType="langMgr">
            <result property="zh"    column="category_name"    />
            <result property="en"    column="category_name_en"    />
            <result property="tc"    column="category_name_tc"    />
            <result property="de"    column="category_name_de"    />
            <result property="es"    column="category_name_es"    />
            <result property="fr"    column="category_name_fr"    />
            <result property="idn"    column="category_name_idn"    />
            <result property="jp"    column="category_name_jp"    />
            <result property="ko"    column="category_name_ko"    />
            <result property="my"    column="category_name_my"    />
            <result property="th"    column="category_name_th"    />
            <result property="vi"    column="category_name_vi"    />
            <result property="pt"    column="category_name_pt"    />
            <result property="rus"    column="category_name_rus"    />
            <result property="blr"    column="category_name_blr"    />
            <result property="ida"    column="category_name_ida"    />
            <result property="sa"    column="category_name_sa"    />
            <result property="ar"    column="category_name_ar"    />
            <result property="it"    column="category_name_it"    />
            <result property="tr"    column="category_name_tr"    />
        </association>
        <collection property="skuAttrValues" ofType="SkuAttrValue" column="{skuId=sku_id}" select="com.ruoyi.system.mapper.SkuAttrValueMapper.selectSkuAttrValueList"/>
    </resultMap>


    <sql id="selectUserShoppingOrderDetailVo">
        select a.id, user_shopping_order_id, selling_goods_info_id, goods_name, goods_img, goods_desc, sku_id, sku_imgs, buy_num, goods_single_price, order_price, a.freight_amount, a.create_by, a.create_time, a.update_by, a.update_time, a.remark ,goods_name_en, goods_name_tc, goods_name_de, goods_name_es, goods_name_fr, goods_name_idn, goods_name_jp, goods_name_ko, goods_name_my, goods_name_th, goods_name_vi, goods_name_pt, goods_name_rus, goods_name_blr, goods_name_ida, goods_name_sa, goods_name_ar, goods_name_it, goods_name_tr, goods_desc_en, goods_desc_tc, goods_desc_de, goods_desc_es, goods_desc_fr, goods_desc_idn, goods_desc_jp, goods_desc_ko, goods_desc_my, goods_desc_th, goods_desc_vi, goods_desc_pt, goods_desc_rus, goods_desc_blr, goods_desc_ida, goods_desc_sa, goods_desc_ar, goods_desc_it, goods_desc_tr, a.shop_info_id, shop_name
        from user_shopping_order_detail a
                 left join selling_goods_info b
                           on a.selling_goods_info_id = b.id
                 left join system_goods_info c
                           on b.system_goods_info_id = c.id
                 left join shop_info d
                           on b.shop_info_id = d.id
                 left join sku e
                           on sku_id = e.id
    </sql>

    <select id="selectUserShoppingOrderDetailList" parameterType="UserShoppingOrderDetail" resultMap="UserShoppingOrderDetailResult">
        <include refid="selectUserShoppingOrderDetailVo"/>
        <where>  
            <if test="userShoppingOrderId != null "> and user_shopping_order_id = #{userShoppingOrderId}</if>
            <if test="sellingGoodsInfoId != null "> and selling_goods_info_id = #{sellingGoodsInfoId}</if>
            <if test="skuId != null "> and sku_id = #{skuId}</if>
            <if test="buyNum != null "> and buy_num = #{buyNum}</if>
            <if test="goodsSinglePrice != null "> and goods_single_price = #{goodsSinglePrice}</if>
            <if test="orderPrice != null "> and order_price = #{orderPrice}</if>
            <if test="shopInfoId != null "> and a.shop_info_id = #{shopInfoId}</if>
            <if test="params.userShoppingOrderIds != null and params.userShoppingOrderIds.size > 0">
                and user_shopping_order_id in
                <foreach collection="params.userShoppingOrderIds" index="index" item="item" open="(" close=")" separator="," nullable="true">
                    #{item}
                </foreach>
            </if>
            <if test="params.userShoppingOrderIds != null and params.userShoppingOrderIds.size == 0">
                and a.id = 0
            </if>
        </where>
    </select>
    
    <select id="selectUserShoppingOrderDetailById" parameterType="Long" resultMap="UserShoppingOrderDetailResult">
        <include refid="selectUserShoppingOrderDetailVo"/>
        where a.id = #{id}
    </select>

    <select id="generateRobotOrder" resultMap="UserShoppingOrderDetailResult">
        select selling_goods_info_id, shop_info_id, seller_id, b.id sku_id, 1 buy_num, IFNULL(goods_price,selling_price) goods_single_price, IFNULL(b.system_price,a.system_price) goods_system_single_price, freight_amount, user_id
        from
            (select a.id selling_goods_info_id, shop_info_id, seller_id, selling_price, system_goods_info_id, system_price, freight_amount, (select id from user_info
                                                                                                                                             where is_del = 0 and account_type = 2 and id not in (select user_id
                                                                                                                                                                                                  from
                                                                                                                                                                                                      (select user_id,COUNT(0) count
                                                                                                                                                                                                       from user_shopping_order a
                                                                                                                                                                                                           inner join user_info b
                                                                                                                                                                                                       on user_id = b.id and b.is_del = 0 and account_type = 2
                                                                                                                                                                                                       where DATE_FORMAT(pay_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
                                                                                                                                                                                                       GROUP BY user_id
                                                                                                                                                                                                      ) as a
                                                                                                                                                                                                  where count <![CDATA[ > ]]>  5)
                                                                                                                                             order by RAND() limit 1)user_id
            from selling_goods_info a
        inner join user_info b
        on a.seller_id = b.id and seller_flag = 1 and a.del_flag = 0 and b.id not in (select seller_id
            from
            (select seller_id,COUNT(0) count
            from user_shopping_order a
            inner join user_info b
            on user_id = b.id and b.is_del = 0 and account_type = 2
            where DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            GROUP BY seller_id
            ) as a
            where count <![CDATA[ > ]]>  5)
            inner join system_goods_info c
            on a.system_goods_info_id = c.id and c.del_flag = 0 order by rand() limit 1
            ) as a
            inner join sku b
        on a.system_goods_info_id = b.system_goods_info_id and b.del_flag = 0
        where user_id is not null order by RAND() limit 1
    </select>

    <insert id="insertUserShoppingOrderDetail" parameterType="UserShoppingOrderDetail" useGeneratedKeys="true" keyProperty="id">
        insert into user_shopping_order_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userShoppingOrderId != null">user_shopping_order_id,</if>
            <if test="sellingGoodsInfoId != null">selling_goods_info_id,</if>
            <if test="shopInfoId != null">shop_info_id,</if>
            <if test="skuId != null">sku_id,</if>
            <if test="buyNum != null">buy_num,</if>
            <if test="goodsSinglePrice != null">goods_single_price,</if>
            <if test="orderPrice != null">order_price,</if>
            <if test="freightAmount != null">freight_amount,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userShoppingOrderId != null">#{userShoppingOrderId},</if>
            <if test="sellingGoodsInfoId != null">#{sellingGoodsInfoId},</if>
            <if test="shopInfoId != null">#{shopInfoId},</if>
            <if test="skuId != null">#{skuId},</if>
            <if test="buyNum != null">#{buyNum},</if>
            <if test="goodsSinglePrice != null">#{goodsSinglePrice},</if>
            <if test="orderPrice != null">#{orderPrice},</if>
            <if test="freightAmount != null">#{freightAmount},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <insert id="insertUserShoppingOrderDetails">
        insert into user_shopping_order_detail
            (user_shopping_order_id, selling_goods_info_id, shop_info_id, sku_id, buy_num, goods_single_price, order_price, goods_system_single_price, order_system_price, freight_amount, create_by, create_time, update_by, update_time, remark)
        <foreach collection="list" item="item" index="index" open="values(" separator="),(" close=")" nullable="true">
            #{item.userShoppingOrderId}, #{item.sellingGoodsInfoId}, #{item.shopInfoId}, #{item.skuId}, #{item.buyNum}, #{item.goodsSinglePrice}, #{item.orderPrice}, #{item.goodsSystemSinglePrice}, #{item.orderSystemPrice}, #{item.freightAmount}, #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime}, #{item.remark}
        </foreach>
    </insert>

    <update id="updateUserShoppingOrderDetail" parameterType="UserShoppingOrderDetail">
        update user_shopping_order_detail
        <trim prefix="SET" suffixOverrides=",">
            <if test="userShoppingOrderId != null">user_shopping_order_id = #{userShoppingOrderId},</if>
            <if test="sellingGoodsInfoId != null">selling_goods_info_id = #{sellingGoodsInfoId},</if>
            <if test="shopInfoId != null">shop_info_id = #{shopInfoId},</if>
            <if test="skuId != null">sku_id = #{skuId},</if>
            <if test="buyNum != null">buy_num = #{buyNum},</if>
            <if test="goodsSinglePrice != null">goods_single_price = #{goodsSinglePrice},</if>
            <if test="orderPrice != null">order_price = #{orderPrice},</if>
            <if test="freightAmount != null">freight_amount = #{freightAmount},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserShoppingOrderDetailById" parameterType="Long">
        delete from user_shopping_order_detail where id = #{id}
    </delete>

    <delete id="deleteUserShoppingOrderDetailByIds" parameterType="String">
        delete from user_shopping_order_detail where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>