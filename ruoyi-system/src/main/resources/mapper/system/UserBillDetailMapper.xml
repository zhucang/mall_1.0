<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//en"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.UserBillDetailMapper">
    
    <resultMap type="UserBillDetail" id="UserBillDetailResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="userAccount"    column="user_account"    />
        <result property="nickName"    column="nick_name"    />
        <result property="accountType"    column="account_type"    />
        <result property="sellerFlag"    column="seller_flag"    />
        <result property="agentId"    column="agent_id"    />
        <result property="agentName"    column="agent_name"    />
        <result property="orderAmount"    column="order_amount"    />
        <result property="deType"    column="de_type"    />
        <result property="deSummary"    column="de_summary"    />
        <result property="orderTime"    column="order_time"    />
        <result property="amountBefore"    column="amount_before"    />
        <result property="amountAfter"    column="amount_after"    />
        <result property="relateOrderId"    column="relate_order_id"    />
        <result property="orderClass"    column="order_class"    />
        <result property="currencyId"    column="currency_id"    />
        <result property="currencyName"    column="currency_name"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectUserBillDetailVo">
        select a.id, user_id,user_account,nick_name,account_type,seller_flag,agent_id,agent_name, order_amount, de_type, de_summary, order_time, amount_before, amount_after, relate_order_id, order_class, currency_id,currency_name,a.remark
        from user_bill_detail a
                 left join user_info b
                           on a.user_id = b.id
                 left join platform_currency c
                           on a.currency_id = c.id
    </sql>

    <select id="selectUserBillDetailList" parameterType="UserBillDetail" resultMap="UserBillDetailResult">
        <include refid="selectUserBillDetailVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userAccount != null "> and user_account like concat('%',#{userAccount},'%') </if>
            <if test="nickName != null "> and nick_name like concat('%',#{nickName},'%') </if>
            <if test="accountType != null "> and account_type = #{accountType}</if>
            <if test="sellerFlag != null "> and seller_flag = #{sellerFlag}</if>
            <if test="orderAmount != null "> and order_amount = #{orderAmount}</if>
            <if test="deType != null  and deType != ''"> and de_type = #{deType}</if>
            <if test="deSummary != null  and deSummary != ''"> and de_summary = #{deSummary}</if>
            <if test="orderTime != null "> <![CDATA[ and DATE_FORMAT(order_time, '%Y-%m-%d') = DATE_FORMAT(#{orderTime}, '%Y-%m-%d')]]></if>
            <if test="amountBefore != null "> and amount_before = #{amountBefore}</if>
            <if test="amountAfter != null "> and amount_after = #{amountAfter}</if>
            <if test="relateOrderId != null "> and relate_order_id = #{relateOrderId}</if>
            <if test="orderClass != null "> and order_class = #{orderClass}</if>
            <if test="currencyId != null "> and currency_id = #{currencyId}</if>
            <if test="agentId != null and params.isAllAgentData != null and params.isAllAgentData == 0">
                and agent_id in (select user_id from agent_team_level_line where sup_user_id = #{agentId} union select #{agentId})
            </if>
            <if test="agentId != null and params.isAllAgentData == null">
                and agent_id = #{agentId}
            </if>
            <if test="startTime !=null ">
                <![CDATA[   and DATE_FORMAT(order_time, '%Y-%m-%d %H:%i:%s')>=  DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%s')   ]]></if>
            <if test="endTime !=null ">
                <![CDATA[  and DATE_FORMAT(order_time, '%Y-%m-%d %H:%i:%s') <= DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%s')    ]]></if>
            ${params.dataScope}
        </where>
    </select>
    
    <select id="selectUserBillDetailById" parameterType="Long" resultMap="UserBillDetailResult">
        <include refid="selectUserBillDetailVo"/>
        where a.id = #{id}
    </select>

    <select id="getTotalOutWinningsByUserId" resultType="java.math.BigDecimal">
        select (select IFNULL(sum(order_amount),0) from user_bill_detail where (order_class = 40 or order_class = 41) and currency_id = #{currencyId} and user_id = #{userId}) + (select IFNULL(sum(order_amount),0) from user_bill_detail where order_class = 42 and currency_id = #{currencyId} and user_id = #{userId})
    </select>

    <select id="getAllowUnfreezeAmountByUserId" resultType="java.math.BigDecimal">
        select (select IFNULL(sum(order_amount),0) from user_bill_detail where order_class = 53 and currency_id = #{currencyId} and user_id = #{userId}) - (select IFNULL(sum(order_amount),0) from user_bill_detail where order_class = 54 and currency_id = #{currencyId} and user_id = #{userId})
    </select>

    <insert id="insertUserBillDetail" parameterType="UserBillDetail" useGeneratedKeys="true" keyProperty="id">
        insert into user_bill_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="orderAmount != null">order_amount,</if>
            <if test="deType != null">de_type,</if>
            <if test="deSummary != null">de_summary,</if>
            <if test="orderTime != null">order_time,</if>
            <if test="amountBefore != null">amount_before,</if>
            <if test="amountAfter != null">amount_after,</if>
            <if test="relateOrderId != null">relate_order_id,</if>
            <if test="orderClass != null">order_class,</if>
            <if test="currencyId != null">currency_id,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="orderAmount != null">#{orderAmount},</if>
            <if test="deType != null">#{deType},</if>
            <if test="deSummary != null">#{deSummary},</if>
            <if test="orderTime != null">#{orderTime},</if>
            <if test="amountBefore != null">#{amountBefore},</if>
            <if test="amountAfter != null">#{amountAfter},</if>
            <if test="relateOrderId != null">#{relateOrderId},</if>
            <if test="orderClass != null">#{orderClass},</if>
            <if test="currencyId != null">#{currencyId},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateUserBillDetail" parameterType="UserBillDetail">
        update user_bill_detail
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="orderAmount != null">order_amount = #{orderAmount},</if>
            <if test="deType != null">de_type = #{deType},</if>
            <if test="deSummary != null">de_summary = #{deSummary},</if>
            <if test="orderTime != null">order_time = #{orderTime},</if>
            <if test="amountBefore != null">amount_before = #{amountBefore},</if>
            <if test="amountAfter != null">amount_after = #{amountAfter},</if>
            <if test="relateOrderId != null">relate_order_id = #{relateOrderId},</if>
            <if test="orderClass != null">order_class = #{orderClass},</if>
            <if test="currencyId != null">currency_id = #{currencyId},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserBillDetailById" parameterType="Long">
        delete from user_bill_detail where id = #{id}
    </delete>

    <delete id="deleteUserBillDetailByIds" parameterType="String">
        delete from user_bill_detail where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>