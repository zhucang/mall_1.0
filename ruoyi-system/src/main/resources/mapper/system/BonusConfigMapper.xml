<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.BonusConfigMapper">
    
    <resultMap type="BonusConfig" id="BonusConfigResult">
        <result property="id"    column="id"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="bonusAmount"    column="bonus_amount"    />
        <result property="currencyId"    column="currency_id"    />
        <result property="bonusType"    column="bonus_type"    />
    </resultMap>

    <sql id="selectBonusConfigVo">
        select id, start_time, end_time, bonus_amount, currency_id, bonus_type from bonus_config
    </sql>

    <select id="selectBonusConfigList" parameterType="BonusConfig" resultMap="BonusConfigResult">
        <include refid="selectBonusConfigVo"/>
        <where>
            <if test="startTime != null">
                <![CDATA[   and DATE_FORMAT(start_time, '%Y-%m-%d %H:%i:%s') <=  DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%s')   ]]></if>
            <if test="endTime != null">
                <![CDATA[  and DATE_FORMAT(end_time, '%Y-%m-%d %H:%i:%s') >= DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%s')    ]]></if>
            <if test="bonusAmount != null "> and bonus_amount = #{bonusAmount}</if>
            <if test="currencyId != null "> and currency_id = #{currencyId}</if>
            <if test="bonusType != null "> and bonus_type = #{bonusType}</if>
            <if test="params.ids != null and params.ids.size > 0">
                and id in
                <foreach collection="params.ids" index="index" item="item" open="(" close=")" separator="," nullable="true">
                    #{item}
                </foreach>
            </if>
            <if test="params.ids != null and params.ids.size == 0">
                and id = 0
            </if>
        </where>
    </select>
    
    <select id="selectBonusConfigById" parameterType="Long" resultMap="BonusConfigResult">
        <include refid="selectBonusConfigVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBonusConfig" parameterType="BonusConfig" useGeneratedKeys="true" keyProperty="id">
        insert into bonus_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="bonusAmount != null">bonus_amount,</if>
            <if test="currencyId != null">currency_id,</if>
            <if test="bonusType != null">bonus_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="bonusAmount != null">#{bonusAmount},</if>
            <if test="currencyId != null">#{currencyId},</if>
            <if test="bonusType != null">#{bonusType},</if>
         </trim>
    </insert>

    <update id="updateBonusConfig" parameterType="BonusConfig">
        update bonus_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="bonusAmount != null">bonus_amount = #{bonusAmount},</if>
            <if test="currencyId != null">currency_id = #{currencyId},</if>
            <if test="bonusType != null">bonus_type = #{bonusType},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBonusConfigById" parameterType="Long">
        delete from bonus_config where id = #{id}
    </delete>

    <delete id="deleteBonusConfigByIds" parameterType="String">
        delete from bonus_config where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>